library('PNADcIBGE')
dadosPNADc <- get_pnadc(year = 2017, quarter = 3, vars=c("VD4001","VD4002"))
View(dadosPNADc)
dadosPNADc
head(dadosPNADc)
head(data.frame( dadosPNADc))
head(tible( dadosPNADc))
library(dplyr)
library(tidyverse)
head(tible( dadosPNADc))
head(tibble( dadosPNADc))
view(dadosPNADc)
vars = c("UF", "V2007", "V2009",
"V2010", "V3007", "VD3001", "VD4001",
"VD4002", "VD4020", "VD4035")
dadosPNADc <- get_pnadc(year = 2017, quarter = 3, vars=vars)
library(survey)
totalrenda <- svytotal(~VD4020, dadosPNADc, na.rm = T)
totalrenda
cv(totalrenda)
confint(totalrenda)
totalsexo <- svytotal(V2007, dadosPNADc, na.rm = T)
totalsexo <- svytotal(~V2007, dadosPNADc, na.rm = T)
totalsexo
totalsexoraca <- svytotal(~V2007 + V2010, dadosPNADc, na.rm = T)
totalsexoraca
totalsexoraca[1]
totalsexoraca[2]
totalsexoraca[1:2]
sum(totalsexoraca[1:2] )
sum(totalsexoraca[3:8] )
totalsexoEraca <- svytotal(~ interaction(V2007, V2010), dadosPNADc, na.rm = T)
ftable(totalsexoEraca)
totalsexorend <- svytotal(~ interaction(V2007, VD4020), dadosPNADc, na.rm = T)
totalsexorend <- svytotal(~ interaction(V2010, VD4020), dadosPNADc, na.rm = T)
ftable(totalsexoEraca)
mediarenda <- svymean(~VD4020, dadosPNADc, na.rm = T)
mediarenda
mediarenda <- svymean(~VD4020+V2007, dadosPNADc, na.rm = T)
mediarenda
totalsexoraca
mediarenda <- svymean(~VD4020+V2007, dadosPNADc, na.rm = T)
mediarenda
mediarenda <- svymean(~interaction( VD4020, V2007), dadosPNADc, na.rm = T)
mediarenda <- svymean(~VD4020, dadosPNADc, na.rm = T)
propsexo <- svymean(~V2007, dadosPNADc, na.rm = T)
propsexo
propsexoraca <- svymean(~V2007 + V2010, dadosPNADc, na.rm = T)
propsexoraca
txdesocup = svyratio(~VD4002 == "Pessoas desocupadas",
~VD4001 == "Pessoas na força de trabalho", dadosPNADc, na.rm = T)
txdesocup
txdesocup = svyratio(~VD4002,
~VD4001, na.rm = T)
txdesocup = svyratio(~VD4002 == "Pessoas desocupadas",
~VD4001 == "Pessoas na força de trabalho",  na.rm = T)
txdesocup = svyratio(~VD4002 == "Pessoas desocupadas",
~VD4001 == "Pessoas na força de trabalho",  na.rm = T)
txdesocup = svyratio(~VD4002 ,
~VD4001, dadosPNADc, na.rm = T)
txdesocup = svyratio(~VD4002 == "Pessoas desocupadas",
~VD4001 == "Pessoas na força de trabalho", dadosPNADc, na.rm = T)
txdesocup
txdesocup = svyratio(~VD4002 == "Pessoas desocupadas",
~VD4001 == "Pessoas na força de trabalho",
dadosPNADc, na.rm = T, se=F)
txdesocup
txdesocup = svyratio(~VD4002 == "Pessoas desocupadas",
~VD4001 == "Pessoas na força de trabalho",
dadosPNADc, na.rm = T, se=FALSE)
txdesocup
txdesocup[1]
medianarenda <- svyquantile(~VD4020, dadosPNADc, quantiles = .5, na.rm = T)
medianarenda
medianarenda <- svyquantile(~VD4020, dadosPNADc, quantiles = .95, na.rm = T)
medianarenda
medianarenda <- svyquantile(~VD4020, dadosPNADc, quantiles = .99, na.rm = T)
medianarenda
p95 <- svyquantile(~VD4020, dadosPNADc, quantiles = .95, na.rm = T)
quantisrenda = svyquantile(~VD4020, dadosPNADc, quantiles = c(.1,.25,.5,.75,.9), na.rm = T)
quantisrenda
quantisrenda = svyquantile(~VD4020, dadosPNADc, quantiles = c(.1,.25,.5,.75,.9, 0.99), na.rm = T)
quantisrenda
mediarendaM = svymean(~VD4020, subset(dadosPNADc, V2007 == "Mulher")  , na.rm = T)
mediarendaM
mediarendaH = svymean(~VD4020, subset(dadosPNADc, V2007 == "Homem")  , na.rm = T)
mediarendaH
svymean(~VD4020, subset(dadosPNADc, V2010 == "Branca")  , na.rm = T)
svymean(~VD4020, subset(dadosPNADc, V2010 == "Preta")  , na.rm = T)
txdesocup25 <- svyratio(~VD4002 == "Pessoas desocupadas",
~VD4001 == "Pessoas na força de trabalho",
subset(dadosPNADc, V2009>=25) , na.rm = T)
txdesocup25
txdesocup25[1]
nivelinstrHP30 = svymean(~VD3001,
subset(dadosPNADc,
V2007 == "Homem" &
V2010 == "Parda" & V2009 > 30), na.rm = T)
nivelinstrHP30 = svymean(~VD3001,
subset(dadosPNADc,
V2007 == "Homem" &
V2010 == "Parda" & V2009 > 30), na.rm = T)
vars = c("UF", "V2007", "V2009",
"V2010", "V3007", "VD3001", "VD4001",
"VD4002", "VD4020", "VD4035")
dadosPNADc <- get_pnadc(year = 2017, quarter = 3, vars=vars)
nivelinstrHP30 = svymean(~VD3007,
subset(dadosPNADc,
V2007 == "Homem" &
V2010 == "Parda" & V2009 > 30), na.rm = T)
nivelinstrHP30 = svymean(~V3007,
subset(dadosPNADc,
V2007 == "Homem" &
V2010 == "Parda" & V2009 > 30), na.rm = T)
nivelinstrHP30
nivelinstrHP30 = svymean(~V3007,
subset(dadosPNADc,
V2007 == "Homem" &
V2010 == "Preta" & V2009 > 30), na.rm = T)
nivelinstrHP30
nivelinstrHP30 = svymean(~V3007,
subset(dadosPNADc,
V2007 == "Homem" &
V2010 == "Branca" & V2009 > 30), na.rm = T)
nivelinstrHP30
nivelinstrHP30 = svymean(~V3007,
subset(dadosPNADc,
V2007 == "Mulher" &
V2010 == "Branca" & V2009 > 30), na.rm = T)
nivelinstrHP30
nivelinstrHP30 = svymean(~V3007,
subset(dadosPNADc,
V2007 == "Mulher" &
V2010 == "Preta" & V2009 > 30), na.rm = T)
nivelinstrHP30
mediaRendaUF <- svyby(~VD4020, ~UF, dadosPNADc, svymean, na.rm = T)
mediaRendaUF
mediaRendaUF[1]
mediaRendaUF[1:2]
mediaRendaUF[2]
max(mediaRendaUF[2])
max(mediaRendaUF[2], 2)
max(mediaRendaUF[2], 3)
sort(mediaRendaUF[2])
sort(mediaRendaUF[2], decreasing = T)
mediaRendaUF[2]
sort(mediaRendaUF[2][1])
sort(mediaRendaUF[2, ])
sort(mediaRendaUF[, 2])
sort(mediaRendaUF[,2], decreasing = T)
which( sort(mediaRendaUF[,2], decreasing = T) )
which( max(mediaRendaUF[,2]) )
which.max( mediaRendaUF[,2] )
m1 = which.max( mediaRendaUF[,2] )
mediaRendaUF[m1]
mediaRendaUF[m1,]
m1 = which.max( mediaRendaUF[,2], 2 )
order(mediaRendaUF)
order(mediaRendaUF, decreasing = T)[1]
order(mediaRendaUF, decreasing = T)
order(mediaRendaUF[,2], decreasing = T)
pos = order(mediaRendaUF[,2], decreasing = T)
mediaRendaUF[pos,]
mediaRendaUF[pos,][1:2,]
mediaRendaUF[pos,][,1:2]
svyhist(~ as.numeric(VD4035), dadosPNADc, main = "Histograma",
xlab = "Número de Horas Trabalhadas")
svyhist(~ as.numeric(VD4010), dadosPNADc, main = "Histograma",
xlab = "Número de Horas Trabalhadas")
svyhist(~ as.numeric(VD4020), dadosPNADc, main = "Histograma",
xlab = "Número de Horas Trabalhadas")
svyhist(~ as.numeric(VD4020), dadosPNADc, main = "Histograma", breaks = 25,
xlab = "Renda")
svyhist(~ as.numeric(VD4020), dadosPNADc, main = "Histograma", breaks = 35,
xlab = "Renda")
svyhist(~ as.numeric(VD4020), dadosPNADc, main = "Histograma", breaks = 55,
xlab = "Renda")
svyhist(~ as.numeric(VD4020), dadosPNADc, main = "Histograma", breaks = 55,freq = TRUE,
xlab = "Renda")
modeloLin <- svyglm(VD4020 ~  V2010 + V2009, dadosPNADc)
summary(modeloLin)
svyttest(VD4020 ~ V2007, dadosPNADc)
giniHab <- svygini(~VD4020, dadosPNADc, na.rm  =  TRUE)
install.packages('convey')
library('convey')
dadosPNADc <- convey_prep(dadosPNADc)
giniHab <- svygini(~VD4020, dadosPNADc, na.rm  =  TRUE)
giniHab
giniUF <- svyby(~VD4020, by = ~UF, dadosPNADc, svygini, na.rm  =  TRUE)
giniUF
order(giniUF)
order(giniUF[,2], decreasing = T)
giniUF[pos2, ]
pos2= order(giniUF[,2], decreasing = T)
giniUF[pos2, ]
curvaLorenz <- svylorenz(~VD4020, dadosPNADc, quantiles = seq(0, 1, .05), na.rm  =  TRUE)
dados <- get_pnadc(year = 2020, quarter = 1, vars=vars)
library(tseries)
library(timeSeries)
library(fGarch)
library(quantmod)
#----------- My function to get data
get_data = function(x, d= "2002-01-01"){
z = getSymbols(x, src='yahoo',
from= d,
periodicity = "monthly",
auto.assign = F)[,4]
return(z)
}
assets = c("VALE3.SA", "PETR4.SA", "PETR3.SA", "ABEV3.SA", "BBAS3.SA", "ITSA4.SA",
"LREN3.SA","BBDC3.SA", "BRFS3.SA", "WEGE3.SA", "RADL3.SA", "VIVT4.SA", "SBSP3.SA",
"LAME4.SA","EMBR3.SA", "CMIG4.SA", "VVAR3.SA", "ELET3.SA", "CSNA3.SA", "CYRE3.SA",
"ENBR3.SA","USIM5.SA", "HGTX3.SA")
df = data.frame(lapply(assets, get_data))
for(i in 1:length(df)){
df[ ,i] = ifelse(is.na(df[,i]),
(mean(df[,i], na.rm = T)),
df[,i] )
}
df = data.frame(lapply(assets, get_data))
get_data = function(x, d= "2007-01-01"){
z = getSymbols(x, src='yahoo',
from= d,
periodicity = "monthly",
auto.assign = F)[,4]
return(z)
}
df = data.frame(lapply(assets, get_data))
get_data('ENBR3.SA', '2000-01-01')
assets = c("VALE3.SA", "PETR4.SA", "PETR3.SA",  "BBAS3.SA", "ITSA4.SA",
"LREN3.SA","BBDC3.SA", "BRFS3.SA", "WEGE3.SA", "RADL3.SA", "VIVT4.SA", "SBSP3.SA",
"LAME4.SA","EMBR3.SA", "CMIG4.SA", "VVAR3.SA", "ELET3.SA", "CSNA3.SA", "CYRE3.SA",
"ENBR3.SA","USIM5.SA", "HGTX3.SA")
assets = c("VALE3.SA", "PETR4.SA", "PETR3.SA", "BBAS3.SA", "ITSA4.SA",
"LREN3.SA","BBDC3.SA", "BRFS3.SA", "WEGE3.SA", "RADL3.SA", "VIVT4.SA", "SBSP3.SA",
"LAME4.SA","EMBR3.SA", "CMIG4.SA", "VVAR3.SA", "ELET3.SA", "CSNA3.SA", "CYRE3.SA",
"ENBR3.SA","USIM5.SA", "HGTX3.SA")
df = data.frame(lapply(assets, get_data))
assets = c( "PETR4.SA", "PETR3.SA", "BBAS3.SA", "ITSA4.SA",
"LREN3.SA","BBDC3.SA", "BRFS3.SA", "WEGE3.SA", "RADL3.SA", "VIVT4.SA", "SBSP3.SA",
"LAME4.SA","EMBR3.SA", "CMIG4.SA", "VVAR3.SA", "ELET3.SA", "CSNA3.SA", "CYRE3.SA",
"ENBR3.SA","USIM5.SA", "HGTX3.SA")
df = data.frame(lapply(assets, get_data))
enbr = get_data('ENBR3.SA', '2000-01-01')
View(enbr)
row.names(enbr)
rownames(enbr)
enbr = data.frame(enbr)
rownames(enbr)
rownames(enbr)[1]
get_data = function(x, d= "2007-01-01"){
z = getSymbols(x, src='yahoo',
from= d,
periodicity = "monthly",
auto.assign = F)[,4]
z = data.frame(z)
if(rownames(z)[1]==d){
return(z)
}
}
df = data.frame(lapply(assets, get_data))
enbr = get_data('ENBR3.SA', '2000-01-01')
usim =get_data('USIM5.SA', '2000-01-01')
df = lapply(assets, get_data)
View(df)
df = data.frame(lapply(assets, get_data))
View(df)
assets = c("VALE3.SA", "PETR4.SA", "PETR3.SA", "BBAS3.SA",
"LREN3.SA","BBDC3.SA", "BRFS3.SA", "WEGE3.SA", "RADL3.SA", "VIVT4.SA", "SBSP3.SA",
"LAME4.SA","EMBR3.SA", "CMIG4.SA", "VVAR3.SA", "ELET3.SA", "CSNA3.SA", "CYRE3.SA",
"ENBR3.SA","USIM5.SA")
df = data.frame(lapply(assets, get_data))
for (i in 1:length(assets)) {
df[,i] = get_data(assets[1], d=2020-01-01)
}
df[,i] = get_data(assets[1], d='2020-01-01')
for (i in 1:length(assets)) {
df[,i] = get_data(assets[1], d='2020-01-01')
}
rm(df)
df = matrix(ncol = length(assets))
for (i in 1:length(assets)) {
df[,i] = get_data(assets[1], d='2020-01-01')
}
View(df)
df = matrix(nrow = 251, ncol = length(assets))
for (i in 1:length(assets)) {
df[,i] = get_data(assets[1], d='2000-01-01')
}
View(df)
length(assets)
df = matrix(nrow = 251, ncol = length(assets))
for (i in 1:length(assets)) {
df[,i] = get_data(assets[i], d='2000-01-01')
}
get_data(assets[1], d='2000-01-01')
get_data(assets[1], d='2000-01-01')[2]
df[,i] = get_data(assets[1], d='2000-01-01')[1]
get_data(assets[1], d='2000-01-01')[1]
get_data(assets[i], d='2000-01-01')[1]
df =  data.frame(matrix(nrow = 251, ncol = length(assets)))
for (i in 1:length(assets)) {
df[,i] = get_data(assets[i], d='2000-01-01')[1]
}
View(df)
colnames(df) = assets
assets = c("VALE3.SA", "PETR4.SA", "PETR3.SA", "BBAS3.SA",
"BBDC3.SA", "BRFS3.SA", "WEGE3.SA", "RADL3.SA", "VIVT4.SA", "SBSP3.SA",
"LAME4.SA","EMBR3.SA", "CMIG4.SA", "VVAR3.SA", "ELET3.SA", "CSNA3.SA", "CYRE3.SA",
"ENBR3.SA","USIM5.SA")
df =  data.frame(matrix(nrow = 251, ncol = length(assets)))
for (i in 1:length(assets)) {
df[,i] = get_data(assets[i], d='2000-01-01')[1]
}
for(i in 1:length(df)){
df[ ,i] = ifelse(is.na(df[,i]),
(mean(df[,i], na.rm = T)),
df[,i] )
}
basicStats(df)
colnames(df) = assets
basicStats(df)
ret = data.frame(matrix(nrow =(df-1), ncol=length(assets)))
for(i in 1:length(assets)){
ret[ ,i] = diff(log(df[,i]))
}
ret = data.frame(matrix(nrow =nrow(df)-1, ncol=length(assets)))
for(i in 1:length(assets)){
ret[ ,i] = diff(log(df[,i]))
}
colnames(ret) = assets
hist(ret[,1])
View(ret)
ibov = get_data('^BVSP', '2000-01-01')
diff(log(ibov))
ret_ibov = diff(log(ibov))
View(ret_ibov)
View(ibov)
log(ibov)
diff(log(ibov))
diff(log(ibov))
ibov = as.data.frame(ibov)
ret_ibov = diff(log(ibov))
log(ibov)
diff(log(ibov))
diff(log(ibov))
summary(ibov)
basicStats(ibov)
ibov = get_data('^BVSP', '2000-01-01')
ret_ibov = diff(log(ibov))
ret_ibov = diff(log(ibov))
ret_ibov = diff(log(ibov))
ret_ibov = diff(log(ibov))
ret_ibov = diff(log(ibov))
ret_ibov = diff(log(ibov))
ret_ibov = diff(log(ibov))
ret_ibov = diff(log(ibov))
ret_ibov = diff(log(ibov))
ret_ibov = diff(log(ibov))
a = c(1, 2, 3, 4)
diff(a)
diff(log(ibov))
log(ibov)
mean(log(ibov))
mean(log(ibov), na.rm=T)
mean(log(ibov), na.rm=T)
a = log(ibov)
mean(a, na.rm=T)
summary(a)
str(a)
basicStats(a)
diff(a)
diff(a)
diff(a)
diff(a)
diff(a)
diff(a)
diff(a)
ret = diff(log(ibov))
setwd("D:/DOUTORADO/Finance Econometry/Finance_aplications")
# Libraries
library(tseries)
library(timeSeries)
library(forecast)   # auto.arima
library(quantmod)
library(fGarch)
library(mFilter)
library(GetBCBData)   # get Bacen data
ibov = getSymbols('^BVSP', src='yahoo', from= '2007-01-01', auto.assign = F)[,4]
ibov
ibov = get_data('^BVSP', '2000-01-01')
colnames(ibov)= c('ibov')
ret_ibov = diff(log(ibov))
ret_ibov = diff(log(ibov))
### Modelo CAPM
library(tseries)
library(timeSeries)
library(fGarch)
library(quantmod)
#----------- My function to get data
get_data = function(x, d= "2007-01-01"){
z = getSymbols(x, src='yahoo',
from= d,
periodicity = "monthly",
auto.assign = F)[,4]
z = data.frame(z)
if(rownames(z)[1]==d){
return(z)
}
}
assets = c("VALE3.SA", "PETR4.SA", "PETR3.SA", "BBAS3.SA",
"BBDC3.SA", "BRFS3.SA", "WEGE3.SA", "RADL3.SA", "VIVT4.SA", "SBSP3.SA",
"LAME4.SA","EMBR3.SA", "CMIG4.SA", "VVAR3.SA", "ELET3.SA", "CSNA3.SA", "CYRE3.SA",
"ENBR3.SA","USIM5.SA")
df =  data.frame(matrix(nrow = 251, ncol = length(assets)))
for (i in 1:length(assets)) {
df[,i] = get_data(assets[i], d='2000-01-01')[1]
}
for(i in 1:length(df)){
df[ ,i] = ifelse(is.na(df[,i]),
(mean(df[,i], na.rm = T)),
df[,i] )
}
basicStats(df)
View(df)
df =  data.frame(matrix(nrow = 251, ncol = length(assets)))
for (i in 1:length(assets)) {
df[,i] = get_data(assets[i], d='2000-01-01')[1]
}
View(df)
ibov = getSymbols('^BVSP', src='yahoo', from= '2007-01-01', auto.assign = F)[,4]
ibov = getSymbols('^BVSP', src='google', from= '2007-01-01', auto.assign = F)[,4]
ibov = getSymbols('^BVSP', src='yahoo', from= '2007-01-01', auto.assign = F)[,4]
load("C:/Users/user/Downloads/Pnad_Covid.RData")
View(PNAD_COVID_052020)
View(PNAD_COVID_082020)
library(PNADcIBGE)
vars = c('V9003', 'V622')
dados = get_pnadc(year=2016, topic = 3, vars = vars)
dados = get_pnadc(year=2016,  vars = vars)
dados = get_pnadc(year=2016, quarter = 3,  vars = vars)
rm(dados)
vars = c('V9003', 'V4622')
dados = get_pnadc(year=2016, quarter = 3,  vars = vars)
vars = c('V3009A', 'VD4037')
dados = get_pnadc(year=2020, quarter = 1,  vars = vars)
dados = dados[['variables']]
View(PNAD_COVID_052020)
table(dados$V3009A)
prop.table(table(dados$V3009A) )
prop.table(table(dados$V3009A, dados$VD4037) )
library(quantmod)
log(5)
log(2) + log(3)
log(2) * log(3)
log(6)
3/9
log(3)/log(9)
remove.packages("quantmod", lib="~/R/win-library/4.0")
install.packages('quantmod')
if(!require(devtools)) install.packages("devtools")
devtools::install_github('datazoompuc/PNAD_Covid/R/datazoom_pnad_covid')
rm(digest)
remove.packages("digest", lib="~/R/win-library/4.0")
devtools::install_github('datazoompuc/PNAD_Covid/R/datazoom_pnad_covid')
ls()
search()
remove.packages(digest)
remove.packages('digest')
devtools::install_github('datazoompuc/PNAD_Covid/R/datazoom_pnad_covid')
devtools::install_github('datazoompuc/PNAD_Covid/R/datazoom_pnad_covid')
library(datazoomPNADcovid)
library(datazoomPNADcovid)
2080/5
2080/5
2080/8
0.24*(11.27/25)
1/(0.24*(11.27/25))
0.24*(11.27/25)
1/(0.24*(11.27/25))
1/(0.24*(11.27/25))
(1/(0.24*(11.27/25)) - 1 )*0.69
phi = 0.75/(1/(0.24*(11.27/25)) - 1 )*0.69
phi = 0.75/ ((1/(0.24*(11.27/25)) - 1 ) *0.69 )
library(sf)
library(geobr)
library(ggplot2)
library(readxl)
library(ggspatial)
library(magrittr)
library(raster)
library(tmap)
library(reshape2)
library("writexl")
df = read_excel('esg_agua.xlsx')
df = as.data.frame(df)
setwd("D:/Git projects/CEPER/ceper_san")
df = read_excel('esg_agua.xlsx')
df = as.data.frame(df)
or_names = colnames(df)
new_names = c('cod', 'mun', 'est', 'ano', 'prest', 'serv', 'pop_urb_a', 'pop_urb_e',
'pop_urb_aI', 'pop_urb_eI', 'pop_tot', 'pop_urb', 'pop_tot_a', 'pop_urb_a',
'pop_tot_e', 'pop_urb_e', 'ice', 'ite', 'iaua', 'iauera', 'iauere', 'iata', 'iatera')
pnames = function(){
for (i in 1:length(or_names)) {
cat( or_names[i], '----- Novo nome:', new_names[i], '\n')
}
}
sp = read_municipality(code_muni = 'SP')
write_xlsx(sp, 'geo.txt')
write_xlsx(sp, 'geo.xlsx')
head(sp)
